// Функціональний вираз - на відміну від оголошеної функції, функ.вираз не містить назви функції
// function (a, b) {
//     let c
//     a = a + 1
//     c = a + b
//     return c
// }
// const myFunction = function (a, b) {
//     let c
//     a = a + 1
//     c = a + b
//     return c
// }
// myFunction(5, 3) -> 9
// Стрілочні функції - відсутнє ключове слово function
// (a, b) => {
//     let c
//     a = a + 1
//     c = a + b
//     return c
// }
// const myFunction = (a, b) => {
// //     let c
// //     a = a + 1
// //     c = a + b
// //     return c
// // }
// Скорочення стрілочної функції
// a => {   // коли праметер один, можна не використовувати ()
//     let c
//     a = a + 1
//     c = a + b
//     return c // return обовязково необхідний, щоб повернути результат
// }
// (a, b) => a + b // якщо ми маэмо 2 параметри можна не використовувати {}. return не потрібний, автоматично повертає результат
// Значення параметрів функцій за замовчуванням
// function multByFactor(value, multi = 1) {  // параметр multi ми за замовчуванням встановили 1
//     return value * multi
// }
// multByFactor(10, 2) -> 20
// multByFactor(5) -> 5
